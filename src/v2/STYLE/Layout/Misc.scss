@use "sass:string" as str;
@use "..//Shared//Media" as media;
@use "../Shared//Functions" as func;

$displays: (
    "initial",
    "block",
    "inline",
    "inline-block",
    "flex",
    "inline-flex",
    "grid",
    "inline-grid",
    "table",
    "inline-table",
    "list-item",
    "run-in",
    "none"
);

@mixin display($display: block) {
    $name: $display;

    @if ($display ==initial) {
        $name: "init";
    }

    .show-#{func.lower($name)} {
        display: $display;

        @if ($display !=none) {
            visibility: visible;
        }
        @else {
            visibility: hidden;
        }
    }
}

@each $val in $displays {
    @if ($val !=block) {
        @if ($val !=none) {
            @include display($val);
        }
    }
}

.hide {
    display: none;
    visibility: hidden;
}

.show {
    display: block;
    visibility: visible;
}

[class*="show-"] {
    display: none;
    visibility: hidden;
}

.r {
    width: 100%;
    max-width: 100%;
    height: auto;
}

@mixin show($size, $display) {
    $name: $size;

    @if ($display !=initial) {
        $name: $name + "-" + $display;
    }

    @else if ($display ==initial) {
        $name: $name + "-init";
    }

    .show-#{str.to-lower-case($name)} {
        @if ($display !=none) and ($display !=block) {
            display: $display;
            visibility: visible;
        }

        @else if ($display !=none) and ($display ==block) {
            display: block;
            visibility: visible;
        }

        @else if ($display ==none) {
            display: block;
            visibility: visible;
        }
    }
}

@each $name, $val in media.$breakpoints {
    @each $dis in $displays {
        @if ($dis !=none) {
            @include media.media($name) {
                @include show($name, $dis);
            }
        }
    }
}

@each $name, $size in media.$devices {
    @include media.media($size) {
        @each $dis in $displays {
            @if ($dis !=none) {
                @include show($name, $dis);
            }
        }
    }
}
